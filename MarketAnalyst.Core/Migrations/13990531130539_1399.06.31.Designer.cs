// <auto-generated />
using System;
using MarketAnalyst.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarketAnalyst.Core.Migrations
{
    [DbContext(typeof(MarketContext))]
    [Migration("13990531130539_1399.06.31")]
    partial class _13990631
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarketAnalyst.Core.Data.General.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AverageMonthVolume");

                    b.Property<int>("BaseVolume");

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(300);

                    b.Property<string>("EnglishSign")
                        .HasMaxLength(300);

                    b.Property<double>("FloatingStock");

                    b.Property<string>("InfoUrl");

                    b.Property<string>("PersianName")
                        .HasMaxLength(300);

                    b.Property<string>("PersianSign")
                        .HasMaxLength(300);

                    b.Property<int>("StockGroupId");

                    b.Property<int>("StocksCount");

                    b.Property<int>("SupervisionLevel");

                    b.HasKey("Id");

                    b.HasIndex("StockGroupId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("MarketAnalyst.Core.Data.General.StockGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("InfoUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("StockGroups");
                });

            modelBuilder.Entity("MarketAnalyst.Core.Data.General.StocksDailyPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("DealsCount");

                    b.Property<int>("DealsVolume");

                    b.Property<double>("FinalPrice");

                    b.Property<double>("HighestPrice");

                    b.Property<double>("InitialPrice");

                    b.Property<double>("LastPrice");

                    b.Property<double>("LowestPrice");

                    b.Property<int>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StocksDailyPrices");
                });

            modelBuilder.Entity("MarketAnalyst.Core.Data.General.Stock", b =>
                {
                    b.HasOne("MarketAnalyst.Core.Data.General.StockGroup", "StockGroup")
                        .WithMany()
                        .HasForeignKey("StockGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MarketAnalyst.Core.Data.General.StocksDailyPrice", b =>
                {
                    b.HasOne("MarketAnalyst.Core.Data.General.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
